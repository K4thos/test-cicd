name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - name: Install dependencies
      run: |
        echo "Installing dependencies"
        choco install mingw zip git

    - name: Build
      run: |
        echo "Building"
        #set PATH=%PATH%;C:\Go\bin
        set GOPATH=${{ github.workspace }}/go
        set CGO_ENABLED=1
        set CC=x86_64-w64-mingw32-gcc
        set CXX=x86_64-w64-mingw32-g++
        set GOOS=windows
        set GOARCH=amd64
        go env -w GO111MODULE=on
        go mod download
        go build -o ./Ikemen_GO.exe ./src

    - name: Deploy
      run: |
        echo "Deploying"
        mkdir deploy
        cp Ikemen_GO.exe deploy\
        echo "Preparing repo assets"
        xcopy /E /I data\* deploy\data\
        xcopy /E /I external\* deploy\external\
        echo "Preparing screenpack assets"
        git clone https://github.com/ikemen-engine/Ikemen_GO-Elecbyte-Screenpack.git
        cd Ikemen_GO-Elecbyte-Screenpack       
        xcopy /E /I chars\* ${{ github.workspace }}\deploy\chars\
        xcopy /E /I data\* ${{ github.workspace }}\deploy\data\
        xcopy /E /I font\* ${{ github.workspace }}\deploy\font\
        xcopy /E /I stages\* ${{ github.workspace }}\deploy\stages\
        cp LICENCE.txt ${{ github.workspace }}\ScreenpackLicense.txt
        echo "Succesfully prepared assets for deployment"

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./deploy/*
        tag_name: v1.0.1
        body: |
          Release version 1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.IKEMEN_TOKEN }}

