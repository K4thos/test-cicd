name: release

on:
  workflow_dispatch:
  push:
    branches: [ "master", "main" ]

permissions:
  checks: write
  contents: write

jobs:
  build:
    name: prepare release
    strategy:
      matrix:
        cfg:
          - runner_os: windows
            os: windows-2022
            goos: windows
            goarch: amd64
            bin: Ikemen_GO.exe
            #cc: x86_64-w64-mingw32-gcc
            #ccx: x86_64-w64-mingw32-g++
          - runner_os: linux
            os: ubuntu-22.04
            goos: linux
            goarch: amd64
            bin: Ikemen_GO_Linux
          - runner_os: macos
            os: macos-11
            goos: darwin
            goarch: amd64
            bin: Ikemen_GO_MacOS
    runs-on: ${{ matrix.cfg.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Golang with cache
        uses: magnetikonline/action-golang-cache@v3
        with:
          go-version: ~1.20
          #go-version-file: go.mod
          #cache-key-suffix: -ikemen

      - name: Install dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update && sudo apt-get install -y libasound2-dev libgl1-mesa-dev xorg-dev libgtk-3-dev
          fi
        shell: bash

      - name: Build
        run: |
          go env -w GO111MODULE=on
          go mod download
          if [ "$RUNNER_OS" == "Windows" ]; then
            go build -v -ldflags "-H windowsgui" -o ./${{ matrix.cfg.bin }} ./src
          else
            go build -v -o ./${{ matrix.cfg.bin }} ./src
          fi
        shell: bash
        env:
          CGO_ENABLED: 1
          GOOS: ${{ matrix.cfg.goos }}
          GOARCH: ${{ matrix.cfg.goarch }}
          #CC: ${{ matrix.cfg.cc }}
          #CCX: ${{ matrix.cfg.cxx }}

      - name: Prepare artifacts
        run: |
          echo "Preparing files for deployment"
          mkdir deploy
          cp ${{ matrix.cfg.bin }} deploy/
          git clone https://github.com/ikemen-engine/Ikemen_GO-Elecbyte-Screenpack.git
          cp -r data external font Ikemen_GO-Elecbyte-Screenpack/chars Ikemen_GO-Elecbyte-Screenpack/data Ikemen_GO-Elecbyte-Screenpack/font Ikemen_GO-Elecbyte-Screenpack/stages deploy/
          cp License.txt deploy/
          cp Ikemen_GO-Elecbyte-Screenpack/LICENCE.txt deploy/ScreenpackLicense.txt
          echo "Zipping deploy directory"
          cd deploy
          if [ "$RUNNER_OS" == "Windows" ]; then
            "/c/Program Files/7-Zip/7z.exe" a ../Ikemen_GO-dev-${{ matrix.cfg.runner_os }}.zip *
          else
            cp ../build/Ikemen_GO.command .
            zip -r ../Ikemen_GO-dev-${{ matrix.cfg.runner_os }}.zip *
          fi
          echo "Successfully prepared assets for deployment"
        shell: bash

      - name: Update dev release
        #uses: softprops/action-gh-release@v1
        uses: iTrooz/action-gh-release@test
        with:
          files: ./Ikemen_GO-dev-${{ matrix.cfg.runner_os }}.zip
          tag_name: nightly
          fail_on_unmatched_files: true
          generate_release_notes: true
          update_tag: true
          #body: |
          #  Nightly build
        env:
          GITHUB_TOKEN: ${{ secrets.IKEMEN_TOKEN }}

      - name: Conventional Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.18.0
        with:
          github-token: ${{ secrets.IKEMEN_TOKEN }}
          git-message: 'chore(release): {version}'
          git-user-name: 'Conventional Changelog Action'
          git-user-email: 'conventional.changelog.action@github.com'
          git-pull-method: '--ff-only'
          git-push: 'true'
          git-branch: 'releases'
          git-url: 'github.com'
          git-path: ''
          preset: 'angular'
          tag-prefix: 'v'
          output-file: 'CHANGELOG.md'
          release-count: '0'
          version-file: '.github/package.json'
          version-path: 'version'
          skip-git-pull: 'false'
          skip-on-empty: 'false'
          skip-version-file: 'false'
          skip-commit: 'false'
          skip-tag: 'false'
          pre-commit: ''
          fallback-version: '0.1.0'
          config-file-path: ''
          pre-changelog-generation: ''
          skip-ci: 'true'
          create-summary: 'true'
          pre-release: 'false'
          pre-release-identifier: 'rc'
